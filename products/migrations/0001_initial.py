# Generated by Django 5.2 on 2025-08-03 17:33

import autoslug.fields
import ckeditor.fields
import django.core.validators
import django.db.models.deletion
import products.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DeliveryCharge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zone', models.CharField(max_length=255, unique=True)),
                ('charge', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='Category Name')),
                ('slug', models.SlugField(blank=True, max_length=255, null=True, unique=True, verbose_name='Category Slug')),
                ('group_name', models.CharField(blank=True, help_text="A way to group categories (e.g., 'Gender', 'Brand', 'Department')", max_length=100, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='category_images/', verbose_name='Category Image')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children', to='products.category', verbose_name='Parent Category')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ['group_name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, editable=False, populate_from='name', slugify=products.models.custom_slugify, unique=True)),
                ('short_description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('product_type', models.CharField(blank=True, choices=[('simple', 'Simple'), ('variable', 'Variable')], default='simple', max_length=20, null=True)),
                ('regular_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('sale_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('stock_quantity', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('is_active', models.BooleanField(blank=True, default=True, help_text='Is the product visible to customers?', null=True)),
                ('is_featured', models.BooleanField(blank=True, default=False, help_text='Should this product be highlighted?', null=True)),
                ('seo_title', models.CharField(blank=True, help_text='SEO Title for search engines (max 60-70 chars).', max_length=255, null=True)),
                ('meta_description', models.TextField(blank=True, help_text='Meta Description for search engines (max 150-160 chars).', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('categories', models.ManyToManyField(blank=True, related_name='products', to='products.category')),
                ('vendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductVariation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(blank=True, max_length=50, null=True)),
                ('weight', models.CharField(blank=True, max_length=50, null=True)),
                ('color', models.CharField(blank=True, max_length=50, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('stock', models.IntegerField(default=0)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='variations', to='products.product')),
            ],
        ),
        migrations.CreateModel(
            name='VendorProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('slug', autoslug.fields.AutoSlugField(always_update=True, editable=False, populate_from='name', slugify=products.models.custom_slugify, unique=True)),
                ('short_description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('product_type', models.CharField(blank=True, choices=[('simple', 'Simple'), ('variable', 'Variable')], default='simple', max_length=20, null=True)),
                ('regular_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('sale_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('vendor_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0.0)])),
                ('stock_quantity', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('is_active', models.BooleanField(blank=True, default=True, help_text='Is the product visible to customers?', null=True)),
                ('is_featured', models.BooleanField(blank=True, default=False, help_text='Should this product be highlighted?', null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', help_text='Approval status: pending, approved, or rejected', max_length=20)),
                ('seo_title', models.CharField(blank=True, help_text='SEO Title for search engines (max 60-70 chars).', max_length=255, null=True)),
                ('meta_description', models.TextField(blank=True, help_text='Meta Description for search engines (max 150-160 chars).', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('categories', models.ManyToManyField(blank=True, related_name='vendor_products', to='products.category')),
                ('vendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vendor_products', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VendorProductVariation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(blank=True, max_length=50, null=True)),
                ('weight', models.CharField(blank=True, max_length=50, null=True)),
                ('color', models.CharField(blank=True, max_length=50, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('stock', models.IntegerField(default=0)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='variations', to='products.vendorproduct')),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='product_images/%Y/%m/')),
                ('name', models.CharField(blank=True, help_text="A unique name for this image within the product (e.g., 'front_view', 'detail_shot').", max_length=255, null=True)),
                ('alt_text', models.CharField(blank=True, help_text='Alt text for accessibility and SEO.', max_length=255, null=True)),
                ('is_featured', models.BooleanField(blank=True, default=False, help_text='Mark as the main image for the product.', null=True)),
                ('order', models.PositiveIntegerField(blank=True, default=0, help_text='Order in which images should appear.', null=True)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='images', to='products.product')),
            ],
            options={
                'ordering': ['order', '-is_featured'],
                'unique_together': {('product', 'name')},
            },
        ),
        migrations.CreateModel(
            name='VendorProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='vendor_product_images/%Y/%m/')),
                ('name', models.CharField(blank=True, help_text="A unique name for this image within the product (e.g., 'front_view', 'detail_shot').", max_length=255, null=True)),
                ('alt_text', models.CharField(blank=True, help_text='Alt text for accessibility and SEO.', max_length=255, null=True)),
                ('is_featured', models.BooleanField(blank=True, default=False, help_text='Mark as the main image for the product.', null=True)),
                ('order', models.PositiveIntegerField(blank=True, default=0, help_text='Order in which images should appear.', null=True)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='images', to='products.vendorproduct')),
            ],
            options={
                'ordering': ['order', '-is_featured'],
                'unique_together': {('product', 'name')},
            },
        ),
    ]
